name: CI devops 2025
on:
  #to begin you want to launch this job in main and develop
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  test-backend: 
    runs-on: ubuntu-24.04
    steps:
     #checkout your github code using actions/checkout@v4
      - uses: actions/checkout@v4

     #do the same with another action (actions/setup-java@v4) that enable to setup jdk 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

     #finally build your app with the latest command
      - name: Build and test with Maven
        run: |
          cd TP1/BackendAPI/simple-api-student-main
          chmod +x mvnw
          ./mvnw clean verify

      # Run SonarCloud analysis
      - name: Analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd TP1/BackendAPI/simple-api-student-main
          ./mvnw -B verify sonar:sonar \
            -Dsonar.projectKey=tp-docker_project-tp-docker \
            -Dsonar.organization=tp-docker \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.branch.name=main

  # define job to build and publish docker image
  build-and-push-docker-image:
    needs: test-backend
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-24.04

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build image and push backend
        uses: docker/build-push-action@v6
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./TP1/BackendAPI/simple-api-student-main
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push database
        uses: docker/build-push-action@v6
        with:
          context: ./TP1/Database
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push httpd
        uses: docker/build-push-action@v6
        with:
          context: ./TP1/HTTP Server
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

  # Continuous Deployment job
  deploy-to-production:
    needs: build-and-push-docker-image
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H clement.laatar.takima.cloud >> ~/.ssh/known_hosts

      - name: Create Ansible vault file
        run: |
          mkdir -p Ansible/my-project/ansible/group_vars
          cat > Ansible/my-project/ansible/group_vars/all.yml << EOF
          postgres_db: ${{ secrets.POSTGRES_DB }}
          postgres_user: ${{ secrets.POSTGRES_USER }}
          postgres_password: ${{ secrets.POSTGRES_PASSWORD }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          backend_network: backend-network
          frontend_network: frontend-network
          EOF

      - name: Deploy with Ansible
        run: |
          cd Ansible/my-project/ansible
          ansible-playbook -i inventories/setup.yml playbook.yml